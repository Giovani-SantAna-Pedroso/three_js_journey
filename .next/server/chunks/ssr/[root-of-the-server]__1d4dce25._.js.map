{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///mnt/to_use/codes/course/three_js_journey/src/pages/01/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\n\nexport default function ThreeDemo() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    // Cena\n    const scene = new THREE.Scene();\n\n    // Cubo\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: \"#f00\",\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Tamanho\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      sizes.width / sizes.height,\n      0.1,\n      1000,\n    );\n    camera.position.z = 3;\n    scene.add(camera);\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n    renderer.setSize(sizes.width, sizes.height);\n\n    // Loop de animação\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Resize handler\n    const handleResize = () => {\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(sizes.width, sizes.height);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      renderer.dispose();\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} id=\"canvas\" />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;;AAHA;;;;AAKe,SAAS;IACtB,MAAM,YAAY,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAA4B;IAEnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,UAAU,OAAO,EAAE;QAExB,OAAO;QACP,MAAM,QAAQ,IAAI,0GAAA,CAAA,QAAW;QAE7B,OAAO;QACP,MAAM,WAAW,IAAI,0GAAA,CAAA,cAAiB,CAAC,GAAG,GAAG;QAC7C,MAAM,WAAW,IAAI,0GAAA,CAAA,oBAAuB,CAAC;YAC3C,OAAO;QACT;QACA,MAAM,OAAO,IAAI,0GAAA,CAAA,OAAU,CAAC,UAAU;QACtC,MAAM,GAAG,CAAC;QAEV,UAAU;QACV,MAAM,QAAQ;YACZ,OAAO,OAAO,UAAU;YACxB,QAAQ,OAAO,WAAW;QAC5B;QAEA,SAAS;QACT,MAAM,SAAS,IAAI,0GAAA,CAAA,oBAAuB,CACxC,IACA,MAAM,KAAK,GAAG,MAAM,MAAM,EAC1B,KACA;QAEF,OAAO,QAAQ,CAAC,CAAC,GAAG;QACpB,MAAM,GAAG,CAAC;QAEV,WAAW;QACX,MAAM,WAAW,IAAI,0GAAA,CAAA,gBAAmB,CAAC;YAAE,QAAQ,UAAU,OAAO;QAAC;QACrE,SAAS,OAAO,CAAC,MAAM,KAAK,EAAE,MAAM,MAAM;QAE1C,mBAAmB;QACnB,MAAM,UAAU;YACd,sBAAsB;YACtB,KAAK,QAAQ,CAAC,CAAC,IAAI;YACnB,KAAK,QAAQ,CAAC,CAAC,IAAI;YACnB,SAAS,MAAM,CAAC,OAAO;QACzB;QACA;QAEA,iBAAiB;QACjB,MAAM,eAAe;YACnB,MAAM,KAAK,GAAG,OAAO,UAAU;YAC/B,MAAM,MAAM,GAAG,OAAO,WAAW;YACjC,OAAO,MAAM,GAAG,MAAM,KAAK,GAAG,MAAM,MAAM;YAC1C,OAAO,sBAAsB;YAC7B,SAAS,OAAO,CAAC,MAAM,KAAK,EAAE,MAAM,MAAM;QAC5C;QACA,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;YACrC,SAAS,OAAO;QAClB;IACF,GAAG,EAAE;IAEL,qBAAO,qKAAC;QAAO,KAAK;QAAW,IAAG;;;;;;AACpC","debugId":null}}]
}